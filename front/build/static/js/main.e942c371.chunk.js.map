{"version":3,"sources":["persons.js","personsform.js","filterform.js","services/httpservice.js","App.js","serviceWorker.js","index.js"],"names":["Persons","props","react_default","a","createElement","Fragment","persons","filter","x","name","toLowerCase","includes","filtterer","map","p","key","number","onClick","remove","PersonsForm","onSubmit","addName","value","newName","onChange","event","preventDefault","setNewName","target","newNumber","setNewNumber","type","FilterForm","setFiltterer","httpservice","axios","get","then","response","data","o","post","i","put","concat","delete","Notification","message","console","log","error","className","text","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","notification","setNotification","useEffect","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","refresh","App_Notification","filterform","personsform","names","push","window","confirm","id","setTimeout","catch","src_persons","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e942c371.chunk.js","sourcesContent":["\nimport React from 'react';\n\nconst Persons = (props) => {\n    return (\n      <>\n      {\n        props.persons.filter(x => x.name.toLowerCase().includes(props.filtterer)).map(p => {\n          return (\n            <div key={p.name}>\n              {p.name} {p.number} <button onClick={() => {\n                props.remove(p)\n              }}>Delete this</button>\n            </div>\n          )\n        })\n      }\n      </>\n    )\n}\n\nexport default Persons;\n","\nimport React from 'react';\n\nconst PersonsForm = (props) => {\n  return (\n\n    <form onSubmit={props.addName}>\n      <div>\n        nimi: <input\n            value={props.newName}\n            onChange={(event) => {\n              event.preventDefault();\n              props.setNewName(event.target.value);\n            }}\n        />\n      </div>\n      <div>\n        numero: <input\n            value={props.newNumber}\n            onChange={(event) => {\n              event.preventDefault();\n              props.setNewNumber(event.target.value);\n            }}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonsForm;\n","\nimport React from 'react';\n\nconst FilterForm = (props) => {\n  return (\n    <div>\n      <input\n          value={props.filtterer}\n          onChange={(event) => {\n            event.preventDefault();\n            props.setFiltterer(event.target.value);\n          }}\n      />\n    </div>\n  )\n}\n\n\nexport default FilterForm;\n","\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst getAll = () => {\n    const promise = axios.get('http://localhost:3001/api/persons')\n    return promise.then(response => response.data );\n}\n\nconst create = (o) => {\n  const promise = axios.post('http://localhost:3001/api/persons', o)\n  return promise.then(response => response.data)\n}\n\nconst update = (o,i) => {\n  const promise = axios.put(`http://localhost:3001/api/persons/${i}`, o)\n  return promise.then(response => response.data)\n}\n\nconst remove = (i) => {\n  const promise = axios.delete(`http://localhost:3001/api/persons/${i}`)\n  return promise.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","\nimport React, {useState, useEffect} from 'react';\nimport Persons from './persons';\nimport PersonsForm from './personsform';\nimport FilterForm from './filterform';\nimport axios from 'axios';\nimport httpservice from './services/httpservice';\n\nconst Notification = (props) => {\n  if (props.message === null) {\n    return null\n  }\n\n  console.log(props.message[0])\n  if(props.message[0].error){\n    return (\n      <div className=\"notification error\">\n        {props.message[0].text}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"notification succeed\">\n      {props.message[0].text}\n    </div>\n  )\n}\n\nconst App = (props) => {\n  const [persons, setPersons] = useState([])\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    httpservice.getAll().then(x => setPersons(x))\n  }, []);\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filtterer, setFiltterer] = useState('');\n\n  const refresh = () => {\n    // axios.get('http://localhost:3001/persons').then(response => {\n    //   setPersons(response.data);\n    // });\n    httpservice.getAll().then(x => setPersons(x))\n  }\n\n  const remove = (o) => {\n    if(window.confirm('Poistetaanko ' + o.name)){\n      httpservice.remove(o.id).then(response => {\n        refresh()\n        setNotification([{text:'numero poistettu', error: false}])\n\n        setTimeout(() => {\n          setNotification(null)\n        }, 1000)\n      }).catch(error => {\n        setNotification([{text:'numero poistettu ennestään', error: true}])\n\n        setTimeout(() => {\n          setNotification(null)\n        }, 1000)\n      })\n    }\n  }\n\n  const addName = (event) => {\n    event.preventDefault();\n    const names = []\n    persons.map(x => names.push(x.name))\n    if(names.includes(newName)){\n      if(window.confirm(newName + ' on jo luettelossa, korvataanko vanha numero uudella')){\n        var o = {}\n        persons.map(x => { if(x.name==newName){ o = x; } })\n        o.number = newNumber\n        httpservice.update(o, o.id).then(response => {\n          refresh()\n          setNotification([{text:'numero päivitetty', error: false}])\n\n          setTimeout(() => {\n            setNotification(null)\n          }, 1000)\n        }).catch(error => {\n          setNotification([{text:'numero poistettu', error: true}])\n\n          setTimeout(() => {\n            setNotification(null)\n          }, 1000)\n        })\n      }\n      return ;\n    }\n\n    httpservice.create({\n      name: newName,\n      number: newNumber\n    }).then(response => {\n\n      refresh()\n      setNotification([{text:'lisättiin ' + newName, error: false}])\n\n      setTimeout(() => {\n        setNotification(null)\n      }, 1000)\n\n    }).catch(error => {\n      setNotification([{text:'error', error: false}])\n\n      setTimeout(() => {\n        setNotification(null)\n      }, 1000)\n    })\n\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Notification message={notification} />\n\n      <h4> rajaa tuloksia </h4>\n      <FilterForm filtterer={filtterer} setFiltterer={setFiltterer} />\n\n\n      <h4> lisää uusi </h4>\n      <PersonsForm addName={addName} newName={newName} newNumber={newNumber}\n          setNewName={setNewName} setNewNumber={setNewNumber} />\n\n      <h2>Puhelinnumerot</h2>\n      <Persons persons={persons} filtterer={filtterer} remove={remove} />\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}